paths:
#Carts Router
 #Ruta para crear un carrito
  /api/carts:
    post:
      summary: Create a new cart
      tags:
        - Carts
      responses:
        "200":
          description: Carrito creado correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCart'
        "403":
          description: Acceso denegado. Intente utilizar las credenciales correctas.
        "500":
          description: Error del servidor.
 #Ruta para obtener el listado de carritos (Solo Admin)
  /api/carts/list:
    get:
      security:
        - bearerAuth: []
      summary: List of carts (admin only)
      tags:
        - Carts
      responses:
        "200":
          description: Listado de carritos obtenido correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cart"
        "403":
          description: Acceso denegado. Intente utilizar las credenciales correctas.
        "500":
          description: Error del servidor.
#Ruta para obtener un carrito por ID
  /api/carts/{cid}:
    get:
      summary: Cart by Id
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Parámetro id del carrito
          schema:
            type: string
      responses:
        "200":
          description: Carrito cargado correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cart"
        "403":
          description: Acceso denegado. Intente utilizar las credenciales correctas.
        "500":
          description: Error del servidor.
#Ruta para eliminar todos los productos del carrito (Sólo User)
    delete:
      security:
        - bearerAuth: []
      summary: Delete all products from the cart (user only)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Parámetro id del carrito
          schema:
            type: string
      responses:
        '200':
          description: Respuesta exitosa
          #ver qué deberia devolver
        "403":
          description: Acceso denegado. Intente utilizar las credenciales correctas.
        "500":
          description: Error del servidor.
#Ruta para actualizar el carrito con un producto (Sólo User)
    put:
      security:
        - bearerAuth: []
      summary: Update with a product (user only)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Parámetro id del carrito
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  product:
                    type: string
                    example: 66314ef2acb3b7caac87f633
                  quantity:
                    type: integer
                    example: 2
      responses:
        '200':
          description: Respuesta exitosa
#Ruta para agregar un producto al carrito (Sólo User)
  /api/carts/{cid}/product/{pid}:
    post:
      security:
        - bearerAuth: []
      summary: Add the chosen product to chosen the cart (user only)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Parámetro id del carrito
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: Parámetro id del producto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Respuesta exitosa
#Ruta para eliminar todos un producto del carrito (Sólo User)
    delete:
      security:
        - bearerAuth: []
      summary: Delete the chosen product to chosen the cart (user only)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Parámetro id del carrito
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: Parámetro id del producto
          schema:
            type: string
      responses:
        '200':
          description: Respuesta exitosa
#Ruta para actualizar la cantidad de un producto (Sólo User)   
    put:
      security:
        - bearerAuth: []
      summary: Update quantity of a product (user only)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Parámetro id del carrito
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: Parámetro id del producto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Respuesta exitosa
#Ruta para finalizar una compra y generar el ticket (Sólo User)
  /api/carts/{cid}/purchase:
    get:
      security:
        - bearerAuth: []
      summary: Purchase and ticket (user only)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Respuesta exitosa

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          example: 66314ef2acb3b7caac87f633
        title:
          type: string
          example: "Producto de ejemplo"
        description:
          type: string
          example: "Descripción del producto"
        code:
          type: string
          example: "PROD001"
        price:
          type: number
          example: 100.0
        status:
          type: boolean
          example: true
        stock:
          type: number
          example: 50
        category:
          type: string
          example: "60a42ec6c36d0b73b6fd92a6"
        colors:
          type: array
          items:
            type: string
          example: ["red", "blue"]
        sizes:
          type: array
          items:
            type: string
          example: ["S", "M", "L"]
        thumbnails:
          type: array
          items:
            type: string
          example: ["image1.jpg", "image2.jpg"]
        owner:
          type: string
          example: "admin"

#Cart schema
    Cart:
      type: object
      properties:
        _id:
          type: string
          example: "60a42ec6c36d0b73b6fd92a7"
        products:
          type: array
          items:
            type: object
            properties:
              product:
                $ref: '#/components/schemas/Product'
              quantity:
                type: integer
                example: 2
    NewCart:
      type: object
      properties:
        _id:
          type: string
          example: "60a42ec6c36d0b73b6fd92a7"
        products:
          type: array
          example: [ ]
  #Seguridad y autenticación del usuario
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT